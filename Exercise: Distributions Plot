{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3551030,"sourceType":"datasetVersion","datasetId":116573}],"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"**This notebook is an exercise in the [Data Visualization](https://www.kaggle.com/learn/data-visualization) course.  You can reference the tutorial at [this link](https://www.kaggle.com/alexisbcook/distributions).**\n\n---\n","metadata":{}},{"cell_type":"markdown","source":"In this exercise, you will use your new knowledge to propose a solution to a real-world scenario.  To succeed, you will need to import data into Python, answer questions using the data, and generate **histograms** and **density plots** to understand patterns in the data.\n\n## Scenario\n\nYou'll work with a real-world dataset containing information collected from microscopic images of breast cancer tumors, similar to the image below.\n\n![ex4_cancer_image](https://storage.googleapis.com/kaggle-media/learn/images/qUESsJe.png)\n\nEach tumor has been labeled as either [**benign**](https://en.wikipedia.org/wiki/Benign_tumor) (_noncancerous_) or **malignant** (_cancerous_).\n\nTo learn more about how this kind of data is used to create intelligent algorithms to classify tumors in medical settings, **watch the short video [at this link](https://www.youtube.com/watch?v=9Mz84cwVmS0)**.","metadata":{}},{"cell_type":"markdown","source":"\n\n## Setup\n\nRun the next cell to import and configure the Python libraries that you need to complete the exercise.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nprint(\"Setup Complete\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T15:10:55.874817Z","iopub.execute_input":"2025-01-24T15:10:55.875195Z","iopub.status.idle":"2025-01-24T15:10:57.308373Z","shell.execute_reply.started":"2025-01-24T15:10:55.875167Z","shell.execute_reply":"2025-01-24T15:10:57.307367Z"}},"outputs":[{"name":"stdout","text":"Setup Complete\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"The questions below will give you feedback on your work. Run the following cell to set up our feedback system.","metadata":{}},{"cell_type":"code","source":"# Set up code checking\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.data_viz_to_coder.ex5 import *\nprint(\"Setup Complete\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T15:10:57.309715Z","iopub.execute_input":"2025-01-24T15:10:57.310235Z","iopub.status.idle":"2025-01-24T15:10:57.404994Z","shell.execute_reply.started":"2025-01-24T15:10:57.310203Z","shell.execute_reply":"2025-01-24T15:10:57.404005Z"}},"outputs":[{"name":"stdout","text":"Setup Complete\n","output_type":"stream"}],"execution_count":2},{"cell_type":"markdown","source":"## Step 1: Load the data\n\nIn this step, you will load the data.\n- Load the data file into a DataFrame called `cancer_data`.  \n- The corresponding filepath is `cancer_filepath`.  \n- Use the `\"Id\"` column to label the rows.","metadata":{}},{"cell_type":"code","source":"# Path of the files to read\ncancer_filepath = \"../input/cancer.csv\"\n\n# Fill in the line below to read the file into a variable cancer_data\ncancer_data = pd.read_csv(cancer_filepath,index_col='Id')\n\n# Run the line below with no changes to check that you've loaded the data correctly\nstep_1.check()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T15:10:57.406764Z","iopub.execute_input":"2025-01-24T15:10:57.407133Z","iopub.status.idle":"2025-01-24T15:10:57.427598Z","shell.execute_reply.started":"2025-01-24T15:10:57.407103Z","shell.execute_reply":"2025-01-24T15:10:57.426620Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.5, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"1_LoadCancerData\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"# Lines below will give you a hint or solution code\n#step_1.hint()\n#step_1.solution()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T15:10:57.429301Z","iopub.execute_input":"2025-01-24T15:10:57.429793Z","iopub.status.idle":"2025-01-24T15:10:57.433816Z","shell.execute_reply.started":"2025-01-24T15:10:57.429750Z","shell.execute_reply":"2025-01-24T15:10:57.432633Z"}},"outputs":[],"execution_count":4},{"cell_type":"markdown","source":"## Step 2: Review the data\n\nUse a Python command to print the first 5 rows of the data.","metadata":{}},{"cell_type":"code","source":"# Print the first five rows of the data\ncancer_data.head() # Your code here","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T15:10:57.434965Z","iopub.execute_input":"2025-01-24T15:10:57.435344Z","iopub.status.idle":"2025-01-24T15:10:57.483261Z","shell.execute_reply.started":"2025-01-24T15:10:57.435306Z","shell.execute_reply":"2025-01-24T15:10:57.482069Z"}},"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"         Diagnosis  Radius (mean)  Texture (mean)  Perimeter (mean)  \\\nId                                                                    \n8510426          B         13.540           14.36             87.46   \n8510653          B         13.080           15.71             85.63   \n8510824          B          9.504           12.44             60.34   \n854941           B         13.030           18.42             82.61   \n85713702         B          8.196           16.84             51.71   \n\n          Area (mean)  Smoothness (mean)  Compactness (mean)  \\\nId                                                             \n8510426         566.3            0.09779             0.08129   \n8510653         520.0            0.10750             0.12700   \n8510824         273.9            0.10240             0.06492   \n854941          523.8            0.08983             0.03766   \n85713702        201.9            0.08600             0.05943   \n\n          Concavity (mean)  Concave points (mean)  Symmetry (mean)  ...  \\\nId                                                                  ...   \n8510426            0.06664               0.047810           0.1885  ...   \n8510653            0.04568               0.031100           0.1967  ...   \n8510824            0.02956               0.020760           0.1815  ...   \n854941             0.02562               0.029230           0.1467  ...   \n85713702           0.01588               0.005917           0.1769  ...   \n\n          Radius (worst)  Texture (worst)  Perimeter (worst)  Area (worst)  \\\nId                                                                           \n8510426           15.110            19.26              99.70         711.2   \n8510653           14.500            20.49              96.09         630.5   \n8510824           10.230            15.66              65.13         314.9   \n854941            13.300            22.81              84.46         545.9   \n85713702           8.964            21.96              57.26         242.2   \n\n          Smoothness (worst)  Compactness (worst)  Concavity (worst)  \\\nId                                                                     \n8510426              0.14400              0.17730            0.23900   \n8510653              0.13120              0.27760            0.18900   \n8510824              0.13240              0.11480            0.08867   \n854941               0.09701              0.04619            0.04833   \n85713702             0.12970              0.13570            0.06880   \n\n          Concave points (worst)  Symmetry (worst)  Fractal dimension (worst)  \nId                                                                             \n8510426                  0.12880            0.2977                    0.07259  \n8510653                  0.07283            0.3184                    0.08183  \n8510824                  0.06227            0.2450                    0.07773  \n854941                   0.05013            0.1987                    0.06169  \n85713702                 0.02564            0.3105                    0.07409  \n\n[5 rows x 31 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Diagnosis</th>\n      <th>Radius (mean)</th>\n      <th>Texture (mean)</th>\n      <th>Perimeter (mean)</th>\n      <th>Area (mean)</th>\n      <th>Smoothness (mean)</th>\n      <th>Compactness (mean)</th>\n      <th>Concavity (mean)</th>\n      <th>Concave points (mean)</th>\n      <th>Symmetry (mean)</th>\n      <th>...</th>\n      <th>Radius (worst)</th>\n      <th>Texture (worst)</th>\n      <th>Perimeter (worst)</th>\n      <th>Area (worst)</th>\n      <th>Smoothness (worst)</th>\n      <th>Compactness (worst)</th>\n      <th>Concavity (worst)</th>\n      <th>Concave points (worst)</th>\n      <th>Symmetry (worst)</th>\n      <th>Fractal dimension (worst)</th>\n    </tr>\n    <tr>\n      <th>Id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>8510426</th>\n      <td>B</td>\n      <td>13.540</td>\n      <td>14.36</td>\n      <td>87.46</td>\n      <td>566.3</td>\n      <td>0.09779</td>\n      <td>0.08129</td>\n      <td>0.06664</td>\n      <td>0.047810</td>\n      <td>0.1885</td>\n      <td>...</td>\n      <td>15.110</td>\n      <td>19.26</td>\n      <td>99.70</td>\n      <td>711.2</td>\n      <td>0.14400</td>\n      <td>0.17730</td>\n      <td>0.23900</td>\n      <td>0.12880</td>\n      <td>0.2977</td>\n      <td>0.07259</td>\n    </tr>\n    <tr>\n      <th>8510653</th>\n      <td>B</td>\n      <td>13.080</td>\n      <td>15.71</td>\n      <td>85.63</td>\n      <td>520.0</td>\n      <td>0.10750</td>\n      <td>0.12700</td>\n      <td>0.04568</td>\n      <td>0.031100</td>\n      <td>0.1967</td>\n      <td>...</td>\n      <td>14.500</td>\n      <td>20.49</td>\n      <td>96.09</td>\n      <td>630.5</td>\n      <td>0.13120</td>\n      <td>0.27760</td>\n      <td>0.18900</td>\n      <td>0.07283</td>\n      <td>0.3184</td>\n      <td>0.08183</td>\n    </tr>\n    <tr>\n      <th>8510824</th>\n      <td>B</td>\n      <td>9.504</td>\n      <td>12.44</td>\n      <td>60.34</td>\n      <td>273.9</td>\n      <td>0.10240</td>\n      <td>0.06492</td>\n      <td>0.02956</td>\n      <td>0.020760</td>\n      <td>0.1815</td>\n      <td>...</td>\n      <td>10.230</td>\n      <td>15.66</td>\n      <td>65.13</td>\n      <td>314.9</td>\n      <td>0.13240</td>\n      <td>0.11480</td>\n      <td>0.08867</td>\n      <td>0.06227</td>\n      <td>0.2450</td>\n      <td>0.07773</td>\n    </tr>\n    <tr>\n      <th>854941</th>\n      <td>B</td>\n      <td>13.030</td>\n      <td>18.42</td>\n      <td>82.61</td>\n      <td>523.8</td>\n      <td>0.08983</td>\n      <td>0.03766</td>\n      <td>0.02562</td>\n      <td>0.029230</td>\n      <td>0.1467</td>\n      <td>...</td>\n      <td>13.300</td>\n      <td>22.81</td>\n      <td>84.46</td>\n      <td>545.9</td>\n      <td>0.09701</td>\n      <td>0.04619</td>\n      <td>0.04833</td>\n      <td>0.05013</td>\n      <td>0.1987</td>\n      <td>0.06169</td>\n    </tr>\n    <tr>\n      <th>85713702</th>\n      <td>B</td>\n      <td>8.196</td>\n      <td>16.84</td>\n      <td>51.71</td>\n      <td>201.9</td>\n      <td>0.08600</td>\n      <td>0.05943</td>\n      <td>0.01588</td>\n      <td>0.005917</td>\n      <td>0.1769</td>\n      <td>...</td>\n      <td>8.964</td>\n      <td>21.96</td>\n      <td>57.26</td>\n      <td>242.2</td>\n      <td>0.12970</td>\n      <td>0.13570</td>\n      <td>0.06880</td>\n      <td>0.02564</td>\n      <td>0.3105</td>\n      <td>0.07409</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 31 columns</p>\n</div>"},"metadata":{}}],"execution_count":5},{"cell_type":"markdown","source":"In the dataset, each row corresponds to a different image.  The dataset has 31 different columns, corresponding to:\n- 1 column (`'Diagnosis'`) that classifies tumors as either benign (which appears in the dataset as **`B`**) or malignant (__`M`__), and\n- 30 columns containing different measurements collected from the images.\n\nUse the first 5 rows of the data to answer the questions below.","metadata":{}},{"cell_type":"code","source":"# Fill in the line below: In the first five rows of the data, what is the\n# largest value for 'Perimeter (mean)'?\nmax_perim = 87.46\n\n# Fill in the line below: What is the value for 'Radius (mean)' for the tumor with Id 8510824?\nmean_radius = 9.504\n\n# Check your answers\nstep_2.check()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T15:10:57.484377Z","iopub.execute_input":"2025-01-24T15:10:57.484840Z","iopub.status.idle":"2025-01-24T15:10:57.493701Z","shell.execute_reply.started":"2025-01-24T15:10:57.484798Z","shell.execute_reply":"2025-01-24T15:10:57.492567Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.5, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"2_ReviewData\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"# Lines below will give you a hint or solution code\n#step_2.hint()\n#step_2.solution()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T15:10:57.494950Z","iopub.execute_input":"2025-01-24T15:10:57.495338Z","iopub.status.idle":"2025-01-24T15:10:57.512394Z","shell.execute_reply.started":"2025-01-24T15:10:57.495308Z","shell.execute_reply":"2025-01-24T15:10:57.511159Z"}},"outputs":[],"execution_count":7},{"cell_type":"markdown","source":"## Step 3: Investigating differences","metadata":{}},{"cell_type":"markdown","source":"#### Part A\n\nUse the code cell below to create two histograms that show the distribution in values for `'Area (mean)'`, separately for both benign and malignant tumors.  (_To permit easy comparison, create a single figure containing both histograms in the code cell below._)","metadata":{}},{"cell_type":"code","source":"# Histograms for benign and maligant tumors\nsns.histplot(cancer_data['Area (mean)'],)\n\n# Check your answer\nstep_3.a.check()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T15:10:57.514897Z","iopub.execute_input":"2025-01-24T15:10:57.515304Z","iopub.status.idle":"2025-01-24T15:10:57.874577Z","shell.execute_reply.started":"2025-01-24T15:10:57.515264Z","shell.execute_reply":"2025-01-24T15:10:57.873677Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.10/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 2, \"failureMessage\": \"Does your figure contain two histograms? Using `sns.histplot` to generate your figure.\", \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"3.1_PlotHist\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Incorrect: Does your figure contain two histograms? Using `sns.histplot` to generate your figure.","text/markdown":"<span style=\"color:#cc3333\">Incorrect:</span> Does your figure contain two histograms? Using `sns.histplot` to generate your figure."},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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8snpTT6AX88vz04HcEYaPny4WbRokTHGmLq6OhMdHW3WrVvnbl+3bp2RZNasWePedvToUdOuXTvz2WefeYw1depUM3HixEY/a/r06WbcuHGNtm/evNlIMiUlJR7bL730UjNixAj3+/r6etO+fXtzww03uLft37/fSDK5ubnGGGMeeeQRM2rUKI9x9u7daySZ4uLiU37+Dz/8YCSZr7/+2hhjzO7du40k87e//c3d55tvvjGSTFFRkce+Q4YMMQ8//HCjxwbAN/yyA8ArxcXF+uKLLzRx4kRJUuvWrTV+/HitWLHipL7/+WvLzp07VV1drd/85jfq0KGD+/XSSy95nMpZunSphg4dqq5du6pDhw5avny5SkpKGq2npqZGktS2bduT2gYOHOj+c6tWrdSlSxcNGDDAvc3pdEqSDhw4IEn66quvtG7dOo/6kpOTJcld444dOzRx4kT17NlTERER6tGjhySdVON/fnZsbKzH55wQHh7u/lUJgP+1DnQBAFqmFStWqL6+XnFxce5txhiFhYXpmWeeUWRkpHt7+/bt3X8+fPiwJOndd9/VWWed5TFmWFiYpJ/W3tx999166qmnlJqaqo4dO+rJJ59UXl5eo/VER0dLkn788Ud17drVoy00NNTjvcPh8NjmcDgkyX0K6vDhwxozZowef/zxkz7nRGAZM2aMunfvrueff15xcXFqaGhQ//79dezYsUY/+78/54SKioqTagbgP4QdAKetvr5eL730kp566imNGjXKo23s2LF69dVXddttt51y3759+yosLEwlJSW69NJLT9nn008/1fDhw3XHHXe4t/3SAt5evXopIiJC27Zt07nnnnuaR+TpvPPO0z/+8Q/16NFDrVuf/DV58OBBFRcX6/nnn9fFF18sSdq4caNXn3X06FHt2rVLQ4YM8almAI3jNBaA0/bOO+/oxx9/1NSpU9W/f3+P17hx4055KuuEjh076u6779bs2bP14osvateuXfryyy+1ZMkSvfjii5Kk3r17Kz8/Xx988IG+/fZbzZkzR5s2bfrZmkJCQpSWluZ16PhP06dPV0VFhSZOnKhNmzZp165d+uCDD3TTTTfp+PHj6tSpk7p06aLly5dr586dWrt2rTIyMrz6rM8//1xhYWFKTU31uW4Ap0bYAXDaVqxYobS0NI9TVSeMGzdO+fn52rp1a6P7P/LII5ozZ46ysrLUp08fjR49Wu+++64SExMlSbfeequuu+46jR8/XikpKTp48KDHrzyN+cMf/qDVq1f7fEfiuLg4ffrppzp+/LhGjRqlAQMGaNasWYqKilJISIhCQkK0evVqFRQUqH///po9e7aefPJJrz7r1Vdf1aRJk9SuXTufagbQOIcxp7hOFABaIGOMUlJSNHv2bPfC6WBWXl6upKQk5efnu4MeAP/jlx0A1nA4HFq+fHmT3qXZn/bs2aNnn32WoAM0MX7ZAQAAVuOXHQAAYDXCDgAAsBphBwAAWI2wAwAArEbYAQAAViPsAAAAqxF2AACA1Qg7AADAaoQdAABgtf8H2KLP3EYGjWUAAAAASUVORK5CYII=\n"},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"# Lines below will give you a hint or solution code\n#step_3.a.hint()\n#step_3.a.solution_plot()","metadata":{},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"#### Part B\n\nA researcher approaches you for help with identifying how the `'Area (mean)'` column can be used to understand the difference between benign and malignant tumors.  Based on the histograms above, \n- Do malignant tumors have higher or lower values for `'Area (mean)'` (relative to benign tumors), on average?\n- Which tumor type seems to have a larger range of potential values?","metadata":{}},{"cell_type":"code","source":"#step_3.b.hint()","metadata":{},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Check your answer (Run this code cell to receive credit!)\nstep_3.b.solution()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T15:11:27.470856Z","iopub.execute_input":"2025-01-24T15:11:27.471241Z","iopub.status.idle":"2025-01-24T15:11:27.478799Z","shell.execute_reply.started":"2025-01-24T15:11:27.471212Z","shell.execute_reply":"2025-01-24T15:11:27.477764Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 3, \"questionType\": 4, \"questionId\": \"3.2_ThinkHist\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Solution: Malignant tumors have higher values for `'Area (mean)'`, on average. Malignant tumors have a larger range of potential values.","text/markdown":"<span style=\"color:#33cc99\">Solution:</span> Malignant tumors have higher values for `'Area (mean)'`, on average. Malignant tumors have a larger range of potential values."},"metadata":{}}],"execution_count":9},{"cell_type":"markdown","source":"## Step 4: A very useful column\n\n#### Part A\n\nUse the code cell below to create two KDE plots that show the distribution in values for `'Radius (worst)'`, separately for both benign and malignant tumors.  (_To permit easy comparison, create a single figure containing both KDE plots in the code cell below._)","metadata":{}},{"cell_type":"code","source":"# KDE plots for benign and malignant tumors\nsns.kdeplot(cancer_data['Radius (worst)'])\n\n# Check your answer\nstep_4.a.check()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T15:14:02.460359Z","iopub.execute_input":"2025-01-24T15:14:02.460880Z","iopub.status.idle":"2025-01-24T15:14:02.714688Z","shell.execute_reply.started":"2025-01-24T15:14:02.460841Z","shell.execute_reply":"2025-01-24T15:14:02.713459Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.10/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.5, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"4.1_PlotThreshold\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"# Lines below will give you a hint or solution code\n#step_4.a.hint()\n#step_4.a.solution_plot()","metadata":{},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"#### Part B\n\nA hospital has recently started using an algorithm that can diagnose tumors with high accuracy.  Given a tumor with a value for `'Radius (worst)'` of 25, do you think the algorithm is more likely to classify the tumor as benign or malignant?","metadata":{}},{"cell_type":"code","source":"#step_4.b.hint()","metadata":{},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Check your answer (Run this code cell to receive credit!)\nstep_4.b.solution()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T15:14:30.390533Z","iopub.execute_input":"2025-01-24T15:14:30.391006Z","iopub.status.idle":"2025-01-24T15:14:30.400422Z","shell.execute_reply.started":"2025-01-24T15:14:30.390973Z","shell.execute_reply":"2025-01-24T15:14:30.398896Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 3, \"questionType\": 4, \"questionId\": \"4.2_ThinkThreshold\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Solution: The algorithm is more likely to classify the tumor as malignant. This is because the curve for malignant tumors is much higher than the curve for benign tumors around a value of 25 -- and an algorithm that gets high accuracy is likely to make decisions based on this pattern in the data.","text/markdown":"<span style=\"color:#33cc99\">Solution:</span> The algorithm is more likely to classify the tumor as malignant. This is because the curve for malignant tumors is much higher than the curve for benign tumors around a value of 25 -- and an algorithm that gets high accuracy is likely to make decisions based on this pattern in the data."},"metadata":{}}],"execution_count":13},{"cell_type":"markdown","source":"## Keep going\n\nReview all that you've learned and explore how to further customize your plots in the **[next tutorial](https://www.kaggle.com/alexisbcook/choosing-plot-types-and-custom-styles)**!","metadata":{}},{"cell_type":"markdown","source":"---\n\n\n\n\n*Have questions or comments? Visit the [course discussion forum](https://www.kaggle.com/learn/data-visualization/discussion) to chat with other learners.*","metadata":{}}]}